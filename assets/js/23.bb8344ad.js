(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{235:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"造火箭"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#造火箭"}},[s._v("#")]),s._v(" 造火箭")]),s._v(" "),a("h2",{attrs:{id:"js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[s._v("#")]),s._v(" js")]),s._v(" "),a("h3",{attrs:{id:"_1-第一题，连等问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-第一题，连等问题"}},[s._v("#")]),s._v(" 1.第一题，连等问题")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("请问输出什么？\n"),a("details",[a("summary",[s._v("解析答案")]),s._v("\n首先答案是：undefined, {n:2}\n"),a("hr"),s._v("\n概念："),a("br"),s._v("\n连等开始之前程序会把所有引用都保存下来，\n连等的过程中，这些值不变\n等到整个连等都完事了，在一块变\n"),a("hr"),s._v("\n执行过程："),a("br"),s._v("\n第一行和第二行代码，"),a("code",[s._v("a")]),s._v("和"),a("code",[s._v("b")]),s._v("变量都是引用的一块内存地址，根据上面的概念，在连等的过程中，"),a("code",[s._v("a.x")]),s._v(" 的赋值操作，其实是给刚才"),a("code",[s._v("a")]),s._v("和"),a("code",[s._v("b")]),s._v("变量内存值进行修改，而不是新的"),a("code",[s._v("{n:2}")]),s._v("的内存地址，当整个连等操作完成了，"),a("code",[s._v("a")]),s._v("就会执行"),a("code",[s._v("{n:2}")]),s._v("的新内存地址，而"),a("code",[s._v("b")]),s._v("还是指向了原来的内存地址，但是原来的内存地址已经变成了"),a("code",[s._v("{n:1,x:{n:2}}")]),s._v("\n所以才会输出刚才的答案\n")])])]),s._v(" "),a("h2",{attrs:{id:"html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[s._v("#")]),s._v(" HTML")]),s._v(" "),a("h2",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[s._v("#")]),s._v(" css")])])}),[],!1,null,null,null);t.default=e.exports}}]);